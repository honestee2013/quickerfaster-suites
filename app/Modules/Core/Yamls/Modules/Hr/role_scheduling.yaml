models:
  RoleSchedule:
    module: hr
    fields:
      name:
        type: string
        validation:
          - required
          - unique:role_schedules,name

      role_id:
        type: select
        foreign:
          table: roles # Assuming 'roles' table exists in your application
          column: id
          onDelete: cascade
        validation:
          - required
      shift_id:
        type: select
        foreign:
          table: shifts # Assuming 'shifts' table exists in your HR module
          column: id
          onDelete: cascade
        validation:
          - required
      day_of_week_id:
        type: select
        foreign:
          table: day_of_weeks # Assuming 'days_of_week' table exists
          column: id
          onDelete: cascade
        validation:
          - required
      
      override_time_start:
        type: timepicker
        modifiers:
          nullable: true
      override_time_end:
        type: timepicker
        modifiers:
          nullable: true
      overtime_after_hours:
        type: decimal
        modifiers:
          precision: 4,2
          nullable: true
        validation:
          - nullable|numeric|min:0


      max_paid_overtime_hours:
        type: decimal
        modifiers:
          precision: 4,2
          nullable: true
        validation:
          - nullable|numeric|min:0



      max_daily_hours:
        type: decimal
        modifiers:
          precision: 4,2
          nullable: true
        validation:
          - nullable|numeric|min:0


      break_rule_id:
        type: select
        foreign:
          table: break_rules # Assuming 'break_rules' table exists
          column: id
          onDelete: set null # Or 'restrict' if a break rule must exist
        modifiers:
          nullable: true

      late_grace_minutes:
        type: integer
        default: 5
        validation:
          - required|integer|min:0
      early_leave_grace_minutes:
        type: integer
        default: 5
        validation:
          - required|integer|min:0
      effective_date:
        type: datepicker
        default: 'now()->toDateString()' # Represents Laravel's now()
        validation:
          - required|date
      end_date:
        type: datepicker
        modifiers:
          nullable: true
        validation:
          - nullable|date|after_or_equal:effective_date

      is_active:
        type: radio
        options: Yes, No
        default: Yes
        modifiers:
          nullable: true

    hiddenFields:
      onTable: []
      onNewForm: []
      onEditForm: []
      onQuery: []

    tab:
      label: Role Schedules
      group: schedule-management
      id: role-schedules
      parentPageTitle: Schedule Management
      pageTitle: Role Schedules
      view: role-schedules
      url: hr/role-schedules

    fieldGroups:
      - title: Schedule Assignment
        groupType: hr
        fields:
          - name
          - role_id
          - shift_id
          - day_of_week_id
          - effective_date
          - end_date
          - is_active

      - title: Standard Times
        groupType: hr
        fields:
          - time_start
          - time_end

      - title: Overrides and Overtime
        groupType: hr
        fields:
          - override_time_start
          - override_time_end
          - overtime_after_hours
          - break_rule_id

      - title: Grace Periods
        groupType: hr
        fields:
          - late_grace_minutes
          - early_leave_grace_minutes

    relations:
      role:
        type: belongsTo
        model: App\Modules\Access\Models\Role # Adjust namespace if needed
        foreignKey: role_id
        displayField: name # Or appropriate display field
      shift:
        type: belongsTo
        model: App\Modules\HR\Models\Shift # Adjust namespace if needed
        foreignKey: shift_id
        displayField: name # Or appropriate display field
      dayOfWeek:
        type: belongsTo
        model: App\Modules\HR\Models\DayOfWeek # Assuming you create this model
        foreignKey: day_of_week_id
        displayField: name # Or appropriate display field like 'day_name'
      breakRule:
        type: belongsTo
        model: App\Modules\HR\Models\BreakRule # Assuming this model exists
        foreignKey: break_rule_id
        displayField: name # Or appropriate display field



    sidebar:
      add: true
      title: Role Schedules
      iconClasses: fas fa-calendar-alt # Or a more suitable icon
      submenu:
        - title: Role Schedules
          url: role-schedules
          iconClasses: fas fa-business-time # Or a more suitable icon
        - title: User Schedules
          url: user-schedules
        



    iconClasses: fas fa-business-time # Or a more suitable icon
    includeHeader: true
    includeFooter: true
    includeSidebar: true
    controls: all
    simpleActions: ['show', 'edit', 'delete']






UserSchedule:
    module: hr
    fields:
      employee_profile_id:
        type: select
        label: Employee ID
        foreign:
          table: employee_profiles
          column: id
          onDelete: cascade
        validation:
          - required
      start_time:
        type: timepicker
        modifiers:
          nullable: true
      end_time:
        type: timepicker
        modifiers:
          nullable: true

    hiddenFields:
      onTable: []
      onNewForm: []
      onEditForm: []
      onQuery: []

    tab:
      label: User Schedules
      group: schedule-management
      id: user-schedules
      parentPageTitle: Schedule Management
      pageTitle: User Schedules Overview
      view: user-schedules
      url: hr/user-schedules

    fieldGroups:
      - title: User Schedule Override
        groupType: hr
        fields:
          - employee_profile_id
          - start_time
          - end_time

    relations:
      employeeProfile:
        type: belongsTo
        model: App\Modules\Hr\Models\EmployeeProfile # Adjust namespace if needed
        foreignKey: employee_profile_id
        displayField: employee_id # Or appropriate display field


    sidebar:
      add: false
      title: Manage User Schedules 
      iconClasses: fas fa-user-clock # Or a more suitable icon
      submenu:
        - title: User Schedules
          url: user-schedules
        - title: User Work Days
          url: user-work-days
          iconClasses: fas fa-user-cog # Or a more suitable icon




    iconClasses: fas fa-user-cog # Or a more suitable icon
    includeHeader: true
    includeFooter: true
    includeSidebar: true
    controls: all
    simpleActions: ['show', 'edit', 'delete']









  #RoleWorkDay:
  #  module: hr
  #  fields:
  #    role_id:
  #      type: select
  #      foreign:
  #        table: roles
  #        column: id
  #        onDelete: cascade
  #      validation:
  #        - required
  #    work_day_id:
  #      type: select
  #      foreign:
  #        table: work_days
  #        column: id
  #        onDelete: cascade
  #      validation:
  #        - required
#
  #  hiddenFields:
  #    onTable: []
  #    onNewForm: []
  #    onEditForm: []
  #    onQuery: []
#
  #  tab:
  #    label: Role Work Days
  #    group: role-schedule-management
  #    id: role-work-days
  #    parentPageTitle: Role Schedule Management
  #    pageTitle: Role Work Days
  #    view: role-work-days
  #    url: hr/role-work-days
#
  #  fieldGroups:
  #    - title: Role Work Day Assignment
  #      groupType: hr
  #      fields:
  #        - role_id
  #        - work_day_id
#
  #  relations:
  #    role:
  #      type: belongsTo
  #      model: App\Modules\Access\Models\Role # Adjust namespace if needed
  #      foreignKey: role_id
  #      displayField: name # Or appropriate display field
  #    workDay:
  #      type: belongsTo
  #      model: App\Modules\HR\Models\WorkDay
  #      foreignKey: work_day_id
  #      displayField: day_name
#
  #  sidebar:
  #    add: false
  #    title: Role Work Days
  #    iconClasses: fas fa-link # Or a more suitable icon
#
  #  iconClasses: fas fa-calendar-check # Or a more suitable icon
  #  includeHeader: true
  #  includeFooter: true
  #  includeSidebar: true
  #  controls: all
  #  simpleActions: ['show', 'edit', 'delete']
#
#









